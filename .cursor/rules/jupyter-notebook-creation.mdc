---
globs: *.ipynb
---

# Jupyter Notebook 创建指南

## 🎯 核心要求

### 1. 教学示例场景限制
**100%严格遵循主规则** [ai-agent-training-rules.mdc](mdc:ai-agent-training-rules.mdc) 中的规定：
- 所有代码示例必须聚焦于**资讯摘要**或**交易趋势**场景
- 严禁使用非金融行业案例
- 必须体现银行业务实际价值

### 2. API调用规范
**强制要求**使用流式输出：
```python
# 必须使用流式输出的Claude API调用
with client.messages.stream(
    model="claude-4-sonnet-20250514",
    max_tokens=max_tokens,
    temperature=temperature,
    system=system,
    messages=[{"role": "user", "content": prompt}]
) as stream:
    for text in stream.text_stream:
        print(text, end="", flush=True)
        full_response += text
```

### 3. 金融合规要求
所有投资分析和建议必须包含免责声明：
```python
print("⚠️ 免责声明：以上分析仅供参考，不构成投资建议。投资有风险，决策需谨慎。")
```

## 📋 Notebook结构模板

### 标准结构
```json
{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# [Topic Name] 基础教程\n\n## 学习目标\n* 理解 [concept 1]\n* 掌握 [skill 1]\n* 能够 [application 1]"
      ]
    }
  ]
}
```

### 内容组织 (45分钟结构)
- **前言** (2-3 minutes): 学习目标和概览
- **核心概念** (概念解释和示例)
- **实践示例** (动手代码示例)
- **演示代码** (工作演示)
- **总结** (关键要点)

## 🔧 技术标准

### 必需依赖
```python
%pip install anthropic openai python-dotenv requests --quiet
import anthropic
import openai
import os
from dotenv import load_dotenv
import httpx
```

### API配置模式 - 流式输出必需
```python
load_dotenv()
client = anthropic.Anthropic(
    api_key=os.getenv("ANTHROPIC_API_KEY"),
    http_client=httpx.Client(proxy="http://127.0.0.1:7890/")
)

# 定义辅助函数用于调用Claude API（流式输出）
def call_claude(prompt, system="", max_tokens=1000, temperature=0.7):
    """
    调用Claude API的辅助函数（流式输出）
    
    参数:
    - prompt: 用户输入的提示词
    - system: 系统提示词
    - max_tokens: 最大token数
    - temperature: 随机性参数（0-1，越高越随机）
    """
    full_response = ""
    
    with client.messages.stream(
        model="claude-4-sonnet-20250514",
        max_tokens=max_tokens,
        temperature=temperature,
        system=system,
        messages=[
            {
                "role": "user",
                "content": prompt
            }
        ]
    ) as stream:
        for text in stream.text_stream:
            print(text, end="", flush=True)
            full_response += text
    
    print()  # 添加换行
    return full_response
```

## 📚 五大核心模块结构

基于 [core_skills_outline.md](mdc:core_skills_outline.md)，notebooks应涵盖：

1. **Prompt 工程** (18 min)
   - TACOS框架 (Task, Audience, Context, Output, Style)
   - 三阶段迭代示例
   - 工作代码演示

2. **Tools 工具集成** (12 min)
   - 工具调用工作流
   - REST API集成示例
   - 错误处理和重试策略

3. **模型微调** (8 min)
   - SFT vs RFT比较
   - 最小代码示例
   - 评估最佳实践

4. **MCP 服务** (5 min)
   - MCP定义和价值
   - 能力扩展示例

5. **AI Agent 基础架构** (2 min)
   - 五大核心组件
   - Mermaid架构图

## 🎯 教学示例要求

### 核心聚焦场景（100%必须）
所有教学代码示例必须**严格限定**在以下两个场景：
1. **资讯摘要** (Financial News Analysis & Summarization)
2. **交易趋势** (Trading Trends Analysis)

### 资讯摘要必备元素
- 财经新闻智能摘要与分析
- 研报要点自动提取
- 央行政策文件解读
- 市场舆情监控与预警

### 交易趋势必备元素
- 股票/外汇/期货价格走势分析
- 技术指标智能计算(RSI、MACD、KDJ)
- 交易信号生成与风险评估
- 投资组合优化建议

### 合规要求
- 所有投资分析必须包含"仅供参考，不构成投资建议"免责声明
- 强调AI仅作为"意图识别"和"参数收集"工具
- 明确所有核心业务操作需后端系统严格校验
- 体现数据安全和隐私保护要求

## 📝 文件命名和格式

### 命名约定
- 使用中文描述性名称：`02_Prompt工程基础教程.ipynb`
- 包含章节/序号：`01_`, `02_`, `03_` 等
- 存放在对应的主题目录中

### Markdown单元格格式
- 使用中文标题，英文技术术语用括号
- 包含每个部分的时间估计
- 学习目标使用项目符号
- 适当时包含Mermaid图表

### 交互元素
- 使用进度指示器（⭐ 表示重要部分）
- 专注于清晰的解释和工作示例
- 提供分步演示
- **所有Claude API调用必须使用流式输出以获得更好的用户体验**

## ✅ 质量检查清单

在完成任何notebook之前：
- [ ] 所有代码单元都运行无错误
- [ ] API密钥从环境变量加载
- [ ] 中文解释清晰准确
- [ ] **示例100%聚焦于资讯摘要或交易趋势场景**
- [ ] **使用真实金融数据格式和结构**
- [ ] 时间估计与内容量匹配
- [ ] 包含工作演示
- [ ] 实现错误处理
- [ ] **所有Claude API调用使用流式输出**
- [ ] **严格禁止非金融行业案例和通用AI示例**
- [ ] **适当时包含合规免责声明**
- [ ] **每个示例都从银行业务实际需求出发**

## 🔗 相关文件引用
- 主规则：[ai-agent-training-rules.mdc](mdc:ai-agent-training-rules.mdc)
- 项目总览：[README.md](mdc:README.md)
- 核心技能大纲：[core_skills_outline.md](mdc:core_skills_outline.md)
- 现有工具示例：[tool_use/01_工具使用.ipynb](mdc:tool_use/01_工具使用.ipynb)

## 📋 支持文档
- [prompt/prompt_outline.md](mdc:prompt/prompt_outline.md) - Prompt工程大纲
- [fineture/fineture-outline.md](mdc:fineture/fineture-outline.md) - 微调大纲
- [prompt/structured_outputs.md](mdc:prompt/structured_outputs.md) - 结构化输出指南
